# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
resources:
  pipelines:
    - pipeline: releasePipeline
      source: msal-javascript-internal-Buddy
      trigger: true
pool:
  vmImage: ubuntu-latest
stages:
  - stage: update_packages
    displayName: 'Update Packages' 
    jobs:
      - job: update_and_push_to_github
        steps:
          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: '16.x'
              checkLatest: true
          # Update each package with artifacts from release
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_core'
              libName: 'core'
              cdn: true
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_common'
              libName: 'common'
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_browser'
              libName: 'browser'
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_node'
              libName: 'node'
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_react'
              libName: 'react'
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_angular'
              libName: 'angular'
          - template: custom-templates/post-publish-template.yml
            parameters:
              name: 'msal_node_extensions'
              libName: 'node-extensions'
              path: 'extensions'
          # Get GitHub PAT
          - task: AzureKeyVault@2
            condition: always()
            continueOnError: true
            inputs:
              azureSubscription: 'MSIDLABKeyVault'
              KeyVaultName: 'ADALTestInfo'
              SecretsFilter: 'MSALJSGITHUB'
              RunAsPreJob: true
          # Create Pull Request from post-release-month-year to dev 
          - task: Npm@1
            displayName: Install release scripts dependencies
            condition: always()
            inputs:
              command: 'custom'
              customCommand: 'ci'
              workingDirectory: 'release-scripts/'
          # Get Release Date
          - task: CmdLine@2
            displayName: 'Get Release Date'
            condition: always()
            inputs:
              script: echo "##vso[task.setvariable variable=releaseDate]$(node getReleaseDate.js)"
              workingDirectory: 'release-scripts/'
            env:
              TZ: "America/Los_Angeles"
          # Create branch name from release date
          - task: CmdLine@2
            displayName: 'Get branch'
            condition: always()
            inputs:
              script: echo "##vso[task.setvariable variable=branch]$(node getReleaseDate.js -branch)"
              workingDirectory: 'release-scripts/'
            env:
              TZ: "America/Los_Angeles"
          # Commit the changes and push to GitHub
          - task: CmdLine@2
            displayName: 'Commit and Push Changes'
            condition: always()
            inputs:
              script: |
                git config --global user.email "release@msaljs.com"
                git config --global user.name "Release Pipeline"
                git checkout -b post-release-$(branch)
                git status
                git add .
                git commit -m "$(releaseDate) Post Release"
                git remote add upstream https://${GITHUBTOKEN}@github.com/AzureAD/microsoft-authentication-library-for-js.git
                git pull upstream post-release-$(branch)
                git push upstream post-release-$(branch)
            env:
              GITHUBTOKEN: $(MSALJSGITHUB)
          # Create Pull Request through GitHub's REST API
          - script: node pullRequest.js --titleDate=$(releaseDate) --branch=post-release-$(branch)
            displayName: "Post Release Pull Request"
            condition: succeeded()
            workingDirectory: 'release-scripts/'
            name: post_release_pull_request
            env:
              GITHUBTOKEN: $(MSALJSGITHUB)