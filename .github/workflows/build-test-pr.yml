# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run CI
# Runs CI on Pull Requests for libraries affected by PR

on:
  pull_request:
    paths:
      - 'lib/**/*'
      - 'extensions/msal-node-extensions/**/*'
      - '!**.md'
      - '.github/workflows/build-test-pr.yml'
      
concurrency:
  group: ci-${{github.ref}}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  pre-check:
    permissions:
      contents: read  # for dorny/paths-filter to fetch a list of changed files
      pull-requests: read  # for dorny/paths-filter to read pull requests
    runs-on: ubuntu-latest
    outputs: 
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.lib-filter.outputs.changes }}
      extensions: ${{ steps.extensions-filter.outputs.node-extensions }}

    steps:
      - uses: dorny/paths-filter@v2
        id: lib-filter
        with:
          # &common and &browser are YAML anchors
          # *common and *browser references previously defined anchor
          # browser/node filter will match any path under common as well as their own
          # angular/react filter will match any path under common and browser as well as their own
          filters: |
            msal-core:
              - 'lib/msal-core/**/**.!(md)'
              - '.github/workflows/build-test-pr.yml'
            msal-common: &common
              - 'lib/msal-common/**/**.!(md)'
              - '.github/workflows/build-test-pr.yml'
            msal-browser: &browser
              - *common
              - 'lib/msal-browser/**/**.!(md)'
            msal-node:
              - *common
              - 'lib/msal-node/**/**.!(md)'
            msal-angular:
              - *browser
              - 'lib/msal-angular/**/**.!(md)'
            msal-react:
              - *browser
              - 'lib/msal-react/**/**.!(md)'
            node-token-validation:
              - *common
              - 'lib/node-token-validation/**/**.!(md)'

      - uses: dorny/paths-filter@v2
        id: extensions-filter
        with:
          filters: |
            node-extensions:
              - 'lib/msal-common/**/**.!(md)'
              - '.github/workflows/build-test-pr.yml'
              - 'extensions/msal-node-extensions/**/**.!(md)'

  lib-build-test:
    needs: pre-check
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
          # Parse JSON array containing names of all filters matching any of changed files
          # e.g. ['package1', 'package2'] if both package folders contains changes
          library: ${{ fromJSON(needs.pre-check.outputs.packages) }}
  
    name: ${{ matrix.library }}
    
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Restore node_modules
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          node_modules
          lib/*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('package-lock.json', 'lib/*/package-lock.json') }}

    - name: Clean Install
      if: steps.cache.outputs.cache-hit != 'true'
      env:
        RUNNING_NODE_CI: 1
      run: npm ci

    - name: Upload npm logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: npm_logs_${{ matrix.library }}
        path: ~/.npm/_logs/**/*
        retention-days: 2

    - name: Build packages
      working-directory: lib/${{ matrix.library }}
      run: npm run build:all

    - name: Lint
      working-directory: lib/${{ matrix.library }}
      run: npm run lint

    - name: Unit Tests with coverage
      working-directory: lib/${{ matrix.library }}
      run: npm run test:coverage

    - name: Upload Test Coverage to CodeCov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: lib/${{matrix.library}}/coverage/lcov.info
        flags: ${{ matrix.library }}

  extensions-build-test:
    needs: pre-check
    runs-on: windows-2019
    if: needs.pre-check.outputs.extensions == 'true'
  
    name: msal-node-extensions
    
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3

    - name: Clean Install
      env:
        RUNNING_NODE_CI: 1
      run: npm ci

    - name: Upload npm logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: npm_logs_msal-node-extensions
        path: ~/npm/cache/_logs/**/*
        retention-days: 2

    - name: Build packages
      working-directory: extensions/msal-node-extensions
      run: npm run build:all

    - name: Lint
      working-directory: extensions/msal-node-extensions
      run: npm run lint

    - name: Unit Tests with coverage
      working-directory: extensions/msal-node-extensions
      run: npm run test:coverage

    - name: Upload Test Coverage to CodeCov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: extensions/msal-node-extensions/coverage/lcov.info
        flags: msal-node-extensions
