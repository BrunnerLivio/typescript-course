# This is a template used by the publish-packages workflow

name: Publish template workflow

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      lib-name:
        required: true
        type: string
      cdn:
        required: false
        type: boolean

    secrets:
      NPM_TOKEN:
        required: true
      CDN_EUNO_SAS:
        required: false
      CDN_USWE_SAS:
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.path }}/${{ inputs.lib-name }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      # Runs lerna bootstrap scoped to this package and any local dependencies so that npm run build:all commands work
      - name: Link dependencies
        run: npm run link:localDeps --if-present

      - name: Publish to CDN
        if: inputs.cdn
        env:
          CDN_EUNO_SAS: ${{ secrets.CDN_EUNO_SAS }}
          CDN_USWE_SAS: ${{ secrets.CDN_USWE_SAS }}
        run: npm run cdn

      - name: Upload CDN Artifacts
        uses: actions/upload-artifact@v3
        if: inputs.cdn
        with:
          name: ${{ inputs.lib-name }}-artifacts
          path: |
            lib/${{ inputs.lib-name }}/README.md
            lib/${{ inputs.lib-name }}/docs/cdn-usage.md
          retention-days: 7

      - name: Write npm authToken
        run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

      - name: Publish to npm
        if: inputs.lib-name != 'msal-angular'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish

      - name: Deploy to npm (Angular only)
        if: inputs.lib-name == 'msal-angular'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run deploy

      - name: Remove .npmrc file
        run: rm .npmrc

      - name: Install Release Scripts dependencies
        working-directory: ./release-scripts
        run: npm install

      - name: Check npm for package availability
        working-directory: ./release-scripts
        run: node checkPackageAvailability.js ${{ inputs.path }}/${{ inputs.lib-name }}

      - name: Create Github releases, discussions and milestones
        working-directory: ./release-scripts
        continue-on-error: true
        env:
          GITHUB_AUTH: ${{ secrets.GITHUB_TOKEN}}
        run: node create-releases.js -lib ${{ inputs.path }}/${{ inputs.lib-name }}
